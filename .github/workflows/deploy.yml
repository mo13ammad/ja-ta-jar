
name: Deploy and Notify via Telegram

on:
  push:
    branches:
      - '**'

jobs:
  deploy-and-notify:
    runs-on: ubuntu-latest

    steps:
      # مرحله 1: کلون کردن کد مخزن
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # مرحله 2: نصب sshpass برای اتصال به سرور
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # مرحله 3: اطلاع‌رسانی به سرور برای استقرار
      - name: Deploy to Server (Main Branch Only)
        if: github.ref_name == 'main'  # شرط برای اجرا فقط روی برنچ main
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # بررسی اتصال SSH با رمز عبور
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p 9011 $SERVER_USER@$SERVER_IP "echo 'SSH connection successful'"
          # اگر اتصال موفق بود، دستورات زیر را اجرا کنید
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p 9011 $SERVER_USER@$SERVER_IP << 'EOF'
            echo terminalok
            cd jatajar-front
            echo "Entering folder"
            git stash
            echo stashok
            #git fetch https://x-access-token:${{ secrets.TOKEN }}@github.com/mo13ammad/jatajar-front.git
            git pull https://x-access-token:${{ secrets.TOKEN }}@github.com/mo13ammad/jatajar-front.git --rebase
            #git reset --hard origin/main
            echo "Git reset to main branch"
            npm install build
            npm run build
            # دستورات اضافه برای سرور
            # به عنوان مثال:
            # systemctl restart your_service
          EOF
      # مرحله 4: تنظیم محیط Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.0  # نسخه پشتیبانی‌شده

      # مرحله 5: نصب وابستگی‌ها
      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install python-telegram-bot==20.3
      # مرحله 6: ارسال پیام تلگرام
      - name: Send Telegram Notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
          REPO_URL: "https://github.com/${{ github.repository }}"
          COMMIT_URL: "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          BRANCH_NAME: ${{ github.ref_name }}
          PUSH_TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        run: |
          python3 - <<'EOF'
          import os
          import asyncio
          from telegram import Bot
          from telegram.constants import ParseMode
          
          async def send_message():
              # دریافت متغیرهای محیطی
              bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
              chat_id = os.getenv("TELEGRAM_CHAT_ID")
              commit_message = os.getenv("COMMIT_MESSAGE")
              author_name = os.getenv("AUTHOR_NAME")
              repo_url = os.getenv("REPO_URL")
              commit_url = os.getenv("COMMIT_URL")
              branch_name = os.getenv("BRANCH_NAME")
              push_timestamp = os.getenv("PUSH_TIMESTAMP")
              
              # ایجاد پیام
              message = (
                  "📢 <b>بروزرسانی پروژه انجام شد!</b>\n\n"
                  "🔖 <b>اطلاعات بروزرسانی:</b>\n"
                  f"📂 <b>برنچ:</b> <code>{branch_name}</code>\n"
                  f"📝 <b>توضیحات کامیت:</b> <code>{commit_message}</code>\n"
                  f"👤 <b>نویسنده:</b> {author_name}\n"
                  f"⏰ <b>زمان:</b> {push_timestamp}\n\n"
                  "🔗 <b>لینک‌ها:</b>\n"
                  f"📁 <a href=\"{repo_url}\">مشاهده مخزن</a>\n"
                  f"🔗 <a href=\"{commit_url}\">مشاهده کامیت</a>\n\n"
                  "با احترام،\n"
                  "\n\n"
                  "🌐 <a href=\"https://viraup.com\">ویــــــــــــراپ</a>\n"
              )
              
              # ارسال پیام با استفاده از Bot
              bot = Bot(token=bot_token)
              await bot.send_message(chat_id=chat_id, text=message, parse_mode=ParseMode.HTML)
              print("پیام با موفقیت ارسال شد.")
          
          asyncio.run(send_message())
          EOF
